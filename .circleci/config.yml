# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

version: 2
jobs:
  build:
    machine:
      # Specify the version you desire here
      ####- image: circleci/php:7.1-node-browsers
      image: ubuntu-1604:201903-01
      docker_layer_caching: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19
      #- image: circleci/buildpack-deps:stretch

    steps:
      - add_ssh_keys:
          fingerprints:
            - "b7:35:a6:4e:9b:0d:6d:d4:78:1e:9a:97:2a:66:6b:be"
      
      - checkout

      - run: 
          name: Get Submodule
          command: |
            ls -l
            sudo apt-get update 
            sudo apt-get install -yqq git curl
            git submodule update --init --recursive
      - run:
          name: Start Docker Containers
          command: |
            cd Docker
            cp -v env-example .env
            COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d nginx redis workspace docker-in-docker
      - run:
          name: Check Docker started
          command: |
            pwd
            ls -l
            docker ps -a 
            docker inspect $( docker ps | grep php-fpm | awk '{print $1}' ) | grep www
            docker exec $( docker ps | grep php-fpm | awk '{print $1}' ) ls -l
            docker exec $( docker ps | grep workspace | awk '{print $1}' ) ls -l
      - run:
          name: Build "hyp2000" Docker Image
          command: |
            cd Docker
            pwd
            ls -l
            docker-compose exec -T php-fpm sh -c "docker --version"
            docker-compose exec -T php-fpm sh -c "if docker image ls | grep -q hyp2000 ; then echo \" nothing to do\"; else cd hyp2000 && docker build --tag hyp2000:ewdevgit -f DockerfileEwDevGit .; fi"
      - run:
          name: Test
          command: |
            pwd
            phpunit -v
