# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      ####- image: circleci/php:7.1-node-browsers
      - image: debian:stretch

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19
      #- image: circleci/buildpack-deps:stretch

    steps:
      - checkout
      
      - setup_remote_docker
      
      - run:
          name: Install Packages
          command: |
            apt-get update -yqq 
            apt-get install -yqq git curl
      - run:
          name: Install Docker
          command: |
            apt-get update -yqq
            apt-get remove -yqq docker docker-engine docker.io containerd runc
            apt-get install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common
      - run: docker --version
      - run: docker run hello-world            
      - run: git submodule update --init --recursive
      - run: 
          name: Install Docker Compose
          command: |
            set -x
            curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose          
      - run:
          name: Start containers
          commnad: |
            docker-compose --version
            cd Docker && COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d nginx redis workspace docker-in-docker
      #- run: sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #- run: sudo chmod +x /usr/local/bin/docker-compose
      #- run: docker run hello-world
      #- run: docker-compose --version
      #- run: cd Docker && COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d nginx redis workspace docker-in-docker
