# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

version: 2
jobs:
  build:
    machine:
      # Specify the version you desire here
      ####- image: circleci/php:7.1-node-browsers
      - image: circleci/classic:edge

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19
      #- image: circleci/buildpack-deps:stretch

    steps:
      - checkout
      
      - setup_remote_docker
      
      
      - run:
          name: Install Packages
          command: |
            apt-get update -yqq 
            apt-get install -yqq git curl
      - run:
          name: Install Docker Binary
          command: |
            apt-get update -yqq
            apt-get install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            apt-key fingerprint 0EBFCD88
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
            apt-get -yqq update
            apt-get -yqq install docker-ce docker-ce-cli containerd.io           
      - run: 
          name: Get Submodule
          command: |
             git submodule update --init --recursive
      - run: 
          name: Install Docker Compose
          command: |
            curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose          
      - run:
          name: Start Docker Containers
          command: |
            cd Docker
            cp -v env-example .env
            COMPOSE_HTTP_TIMEOUT=200 docker-compose up -d nginx redis workspace docker-in-docker
      - run:
          name: Check Docker started
          command: |
            pwd
            ls -l
            docker ps -a 
            docker inspect $( docker ps | grep php-fpm | awk '{print $1}' ) | grep www
            docker exec $( docker ps | grep php-fpm | awk '{print $1}' ) ls -l
            docker exec $( docker ps | grep workspace | awk '{print $1}' ) ls -l
      - run:
          name: Build "hyp2000" Docker Image
          command: |
            cd Docker
            docker-compose exec -T php-fpm sh -c "docker --version"
            docker-compose exec -T php-fpm sh -c "if docker image ls | grep -q hyp2000 ; then echo \" nothing to do\"; else cd hyp2000 && docker build --tag hyp2000:ewdevgit -f DockerfileEwDevGit .; fi"
      - run:
          name: Test
          command: |
            pwd
            phpunit -v
